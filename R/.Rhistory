date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
})
observeEvent(input$num2, {
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
})
observeEvent(input$text, {
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
})
output$plot1 <- renderPlot({
plot(stl(na.approx(ts$ts),s.window = "periodic"),range.bars = F,set.pars = list(mar =c(2.2,5,1,3), oma = c(0, 0, 0, 0),tck = 0, mfrow = c(4, 1)))
par(new=T,mar =c(1.5,3.2,0.6,2),oma = c(0, 0, 0, 0))
plot.window(xlim=c(0.04,0.96),ylim=c(0.04,0.94))
},height = height[1])
output$plot2 <- renderPlot({
if(length(click$brush)>0) {
ts_w=na.approx(ts$ts)
stl_w=stl(ts_w,s.window = "periodic")
stl_w$time.series=cbind(stl_w$time.series,ts_w)
stl_w$time.series=window_new(beginning = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[1],
ending = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[2],timedata = stl_w$time.series)
if(position4((click$brush$ymin+click$brush$ymax)/2)==4){
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,4],type = "l", xlab="time", ylab="data",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==3) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,1],type = "l", xlab="time", ylab="seasonal",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==2) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,2],type = "l", xlab="time", ylab="trend",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==1) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,3],type = "l", xlab="time", ylab="remainder",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
polygon(c(stl_w$time.series[,5][1]-0.1,stl_w$time.series[,5],stl_w$time.series[,5][length(stl_w$time.series[,5])]+0.1),
c(0,stl_w$time.series[,3],0), col='black')
}
}
})
}
shinyApp(ui = ui, server = server)
}
Zeitreihen_Stat2()
selectInput("index",label = "What index should be shown?",choices = optindex)
optindex=list()
optindex$"Dax"=1
optindex$"Nasdaq"=2
optindex$"Dow Jones"=3
selectInput("index",label = "What index should be shown?",choices = optindex)
source('~/Documents/Bachelorarbeit/Funktionen /Zeitreihen/Zeitreihen_histdata.R')
Zeitreihen_Stat2()
source('~/Documents/Bachelorarbeit/Funktionen /Zeitreihen/Zeitreihen_histdata.R')
Zeitreihen_Stat2()
input$text="^Gdax"
input$text="^GDAXI"
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
ts_w=na.approx(ts$ts)
stl_w=stl(ts_w,s.window = "periodic")
stl_w$time.series=cbind(stl_w$time.series,ts_w)
stl_w$time.series=window_new(beginning = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[1],
ending = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[2],timedata = stl_w$time.series)
plot(stl(na.approx(ts$ts),s.window = "periodic"),range.bars = F,set.pars = list(mar =c(2.2,5,1,3), oma = c(0, 0, 0, 0),tck = 0, mfrow = c(4, 1)))
source('~/Documents/Bachelorarbeit/Funktionen /Zeitreihen/Zeitreihen_histdata.R')
Zeitreihen_Stat2()
renderUI({
optdata=list()
if(input$index==1) {
optdata$"Dax"="^GDAXI"
optdata$"Deutsche Bank"="DBK.DE"
optdata$"Lufthansa"="LHA.DE"
optdata$"Thysen Krupp"="TKA.DE"
optdata$"Infineon"="IFX.DE"
optdata$"Deutsche Post"="DPW.DE"
optdata$"Siemens"="SIE.DE"
optdata$"Fresenius"="FME.DE"
optdata$"RWE AG"="RWE.DE"
optdata$"BMW"="BMW.DE"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?",selected = "^GDax")
} else if(input$index==2) {
optdata$"Nasdaq Composit"="^IXIC"
optdata$"Centrue Financial Corporation"="CFCB"
optdata$"E*TRADE Financial Corporation"="ETFC"
optdata$"First Internet Bancorp"="INBK"
optdata$" Medivation, Inc. "="MDVN"
optdata$"Mimecast Limited "="MIME"
optdata$"Siliconware Precision Industries Co. Ltd. "="SPIL"
optdata$"GW Pharmaceuticals plc"="GWPH"
optdata$"IZEA, Inc."="IZEA"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?",selected = "^IXIC")
} else if(input$index==3) {
optdata$"Dow Jones Industrial"="^DJI"
optdata$"Exxon Mobil Corporation"="XOM"
optdata$"Wal-Mart Stores Inc."="WMT"
optdata$"Verizon Communications Inc."="VZ"
optdata$"Visa Inc."="V"
optdata$"United Technologies Corporation"="UTX"
optdata$"UnitedHealth Group Incorporated"="UNH"
optdata$"The Travelers Companies, Inc."="TRV"
optdata$"The Procter & Gamble Company"="PG"
optdata$"NIKE, Inc."="NKE"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?")
}
a
})
fluidPage(
tags$div( HTML(
"<h2><center>Zeitreihen</center></h2>")
),
sidebarLayout(
sidebarPanel(
selectInput("index",label = "What index should be shown?",choices = optindex),
uiOutput("dynamic"),
fluidRow(
column(6,numericInput("num1", label = "Start", value = 2000)),
column(6,numericInput("num2", label = "Ende", value = 2010))
)
),
mainPanel(
plotOutput("plot1",height = height[1], click = "click1", dblclick = "click2", brush = brushOpts(id = "brush")),
plotOutput("plot2")
)
)
)
height=c(800,400)
fluidPage(
tags$div( HTML(
"<h2><center>Zeitreihen</center></h2>")
),
sidebarLayout(
sidebarPanel(
selectInput("index",label = "What index should be shown?",choices = optindex),
uiOutput("dynamic"),
fluidRow(
column(6,numericInput("num1", label = "Start", value = 2000)),
column(6,numericInput("num2", label = "Ende", value = 2010))
)
),
mainPanel(
plotOutput("plot1",height = height[1], click = "click1", dblclick = "click2", brush = brushOpts(id = "brush")),
plotOutput("plot2")
)
)
)
ui <- fluidPage(
tags$div( HTML(
"<h2><center>Zeitreihen</center></h2>")
),
sidebarLayout(
sidebarPanel(
selectInput("index",label = "What index should be shown?",choices = optindex),
uiOutput("dynamic"),
fluidRow(
column(6,numericInput("num1", label = "Start", value = 2000)),
column(6,numericInput("num2", label = "Ende", value = 2010))
)
),
mainPanel(
plotOutput("plot1",height = height[1], click = "click1", dblclick = "click2", brush = brushOpts(id = "brush")),
plotOutput("plot2")
)
)
)
server <- function(input, output) {
output$dynamic = renderUI({
optdata=list()
if(input$index==1) {
optdata$"Dax"="^GDAXI"
optdata$"Deutsche Bank"="DBK.DE"
optdata$"Lufthansa"="LHA.DE"
optdata$"Thysen Krupp"="TKA.DE"
optdata$"Infineon"="IFX.DE"
optdata$"Deutsche Post"="DPW.DE"
optdata$"Siemens"="SIE.DE"
optdata$"Fresenius"="FME.DE"
optdata$"RWE AG"="RWE.DE"
optdata$"BMW"="BMW.DE"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?",selected = "^GDax")
} else if(input$index==2) {
optdata$"Nasdaq Composit"="^IXIC"
optdata$"Centrue Financial Corporation"="CFCB"
optdata$"E*TRADE Financial Corporation"="ETFC"
optdata$"First Internet Bancorp"="INBK"
optdata$" Medivation, Inc. "="MDVN"
optdata$"Mimecast Limited "="MIME"
optdata$"Siliconware Precision Industries Co. Ltd. "="SPIL"
optdata$"GW Pharmaceuticals plc"="GWPH"
optdata$"IZEA, Inc."="IZEA"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?",selected = "^IXIC")
} else if(input$index==3) {
optdata$"Dow Jones Industrial"="^DJI"
optdata$"Exxon Mobil Corporation"="XOM"
optdata$"Wal-Mart Stores Inc."="WMT"
optdata$"Verizon Communications Inc."="VZ"
optdata$"Visa Inc."="V"
optdata$"United Technologies Corporation"="UTX"
optdata$"UnitedHealth Group Incorporated"="UNH"
optdata$"The Travelers Companies, Inc."="TRV"
optdata$"The Procter & Gamble Company"="PG"
optdata$"NIKE, Inc."="NKE"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?")
}
a
})
ts= reactiveValues(
ts=c(),ts_m=c()
)
click= reactiveValues(
brush=list()
)
observeEvent(input$brush, {
click$brush=list(xmin=input$brush$xmin,xmax=input$brush$xmax,
ymin=input$brush$ymin,ymax=input$brush$ymax)
})
observeEvent(input$num1, {
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
})
observeEvent(input$num2, {
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
})
observeEvent(input$text, {
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
})
output$plot1 <- renderPlot({
plot(stl(na.approx(ts$ts),s.window = "periodic"),range.bars = F,set.pars = list(mar =c(2.2,5,1,3), oma = c(0, 0, 0, 0),tck = 0, mfrow = c(4, 1)))
par(new=T,mar =c(1.5,3.2,0.6,2),oma = c(0, 0, 0, 0))
plot.window(xlim=c(0.04,0.96),ylim=c(0.04,0.94))
},height = height[1])
output$plot2 <- renderPlot({
if(length(click$brush)>0) {
ts_w=na.approx(ts$ts)
stl_w=stl(ts_w,s.window = "periodic")
stl_w$time.series=cbind(stl_w$time.series,ts_w)
stl_w$time.series=window_new(beginning = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[1],
ending = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[2],timedata = stl_w$time.series)
if(position4((click$brush$ymin+click$brush$ymax)/2)==4){
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,4],type = "l", xlab="time", ylab="data",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==3) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,1],type = "l", xlab="time", ylab="seasonal",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==2) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,2],type = "l", xlab="time", ylab="trend",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==1) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,3],type = "l", xlab="time", ylab="remainder",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
polygon(c(stl_w$time.series[,5][1]-0.1,stl_w$time.series[,5],stl_w$time.series[,5][length(stl_w$time.series[,5])]+0.1),
c(0,stl_w$time.series[,3],0), col='black')
}
}
})
}
shinyApp(ui = ui, server = server)
input
date1=as.Date(paste0(input$num1,"-1-1"))
date2=as.Date(paste0(input$num2,"-1-1"))
spy = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "d",retclass="ts",quiet = T)
spy_m = get.hist.quote(instrument= input$text,start = date1, end = date2 ,quote="Open", provider = "yahoo",compression = "m",retclass="ts",quiet = T)
spy=ts(as.numeric(spy),start = input$num1,frequency = 365)
spy_m=ts(as.numeric(spy_m[!is.na(spy_m)]),start = input$num1,frequency = 12)
ts$ts=spy
ts$ts_m=spy_m
click=list()
click$brush=list(xmin=0.1,xmax=0.9,
ymin=0.1,ymax=0.2)
if(length(click$brush)>0) {
ts_w=na.approx(ts$ts)
stl_w=stl(ts_w,s.window = "periodic")
stl_w$time.series=cbind(stl_w$time.series,ts_w)
stl_w$time.series=window_new(beginning = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[1],
ending = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[2],timedata = stl_w$time.series)
if(position4((click$brush$ymin+click$brush$ymax)/2)==4){
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,4],type = "l", xlab="time", ylab="data",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==3) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,1],type = "l", xlab="time", ylab="seasonal",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==2) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,2],type = "l", xlab="time", ylab="trend",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==1) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,3],type = "l", xlab="time", ylab="remainder",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
polygon(c(stl_w$time.series[,5][1]-0.1,stl_w$time.series[,5],stl_w$time.series[,5][length(stl_w$time.series[,5])]+0.1),
c(0,stl_w$time.series[,3],0), col='black')
}
}
plot(stl(na.approx(ts$ts),s.window = "periodic"),range.bars = F,set.pars = list(mar =c(2.2,5,1,3), oma = c(0, 0, 0, 0),tck = 0, mfrow = c(4, 1)))
par(new=T,mar =c(1.5,3.2,0.6,2),oma = c(0, 0, 0, 0))
plot.window(xlim=c(0.04,0.96),ylim=c(0.04,0.94))
optindex
uiOutput("dynamic")
source('~/Documents/Bachelorarbeit/Funktionen /Zeitreihen/Zeitreihen_histdata.R')
Zeitreihen_Stat2()
source('~/Documents/Bachelorarbeit/Funktionen /Zeitreihen/Zeitreihen_histdata.R')
Zeitreihen_Stat2()
click
click=list()
click$brush=list(xmin=0.1,xmax=0.9,
ymin=0.1,ymax=0.2)
!is.na(input$text)
input$text
length(click$brush)>0
length(click$brush)>0 & !is.na(input$text)
ts_w=na.approx(ts$ts)
stl_w=stl(ts_w,s.window = "periodic")
stl_w$time.series=cbind(stl_w$time.series,ts_w)
stl_w$time.series=window_new(beginning = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[1],
ending = input$num1+position6(xmin = click$brush$xmin, xmax = click$brush$xmax,ending = input$num2, beginning=input$num1)[2],timedata = stl_w$time.series)
if(position4((click$brush$ymin+click$brush$ymax)/2)==4){
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,4],type = "l", xlab="time", ylab="data",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==3) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,1],type = "l", xlab="time", ylab="seasonal",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==2) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,2],type = "l", xlab="time", ylab="trend",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
} else if(position4((click$brush$ymin+click$brush$ymax)/2)==1) {
plot(x=stl_w$time.series[,5], y= stl_w$time.series[,3],type = "l", xlab="time", ylab="remainder",
ylim=position5(x = position4((click$brush$ymin+click$brush$ymax)/2),ymin = click$brush$ymin,ymax = click$brush$ymax,ts_w = na.approx(ts$ts)))
polygon(c(stl_w$time.series[,5][1]-0.1,stl_w$time.series[,5],stl_w$time.series[,5][length(stl_w$time.series[,5])]+0.1),
c(0,stl_w$time.series[,3],0), col='black')
}
plot(stl(na.approx(ts$ts),s.window = "periodic"),range.bars = F,set.pars = list(mar =c(2.2,5,1,3), oma = c(0, 0, 0, 0),tck = 0, mfrow = c(4, 1)))
if(!is.na(input$index)){
optdata=list()
if(input$index==1) {
optdata$"Dax"="^GDAXI"
optdata$"Deutsche Bank"="DBK.DE"
optdata$"Lufthansa"="LHA.DE"
optdata$"Thysen Krupp"="TKA.DE"
optdata$"Infineon"="IFX.DE"
optdata$"Deutsche Post"="DPW.DE"
optdata$"Siemens"="SIE.DE"
optdata$"Fresenius"="FME.DE"
optdata$"RWE AG"="RWE.DE"
optdata$"BMW"="BMW.DE"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?",selected = "^GDax")
} else if(input$index==2) {
optdata$"Nasdaq Composit"="^IXIC"
optdata$"Centrue Financial Corporation"="CFCB"
optdata$"E*TRADE Financial Corporation"="ETFC"
optdata$"First Internet Bancorp"="INBK"
optdata$" Medivation, Inc. "="MDVN"
optdata$"Mimecast Limited "="MIME"
optdata$"Siliconware Precision Industries Co. Ltd. "="SPIL"
optdata$"GW Pharmaceuticals plc"="GWPH"
optdata$"IZEA, Inc."="IZEA"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?",selected = "^IXIC")
} else if(input$index==3) {
optdata$"Dow Jones Industrial"="^DJI"
optdata$"Exxon Mobil Corporation"="XOM"
optdata$"Wal-Mart Stores Inc."="WMT"
optdata$"Verizon Communications Inc."="VZ"
optdata$"Visa Inc."="V"
optdata$"United Technologies Corporation"="UTX"
optdata$"UnitedHealth Group Incorporated"="UNH"
optdata$"The Travelers Companies, Inc."="TRV"
optdata$"The Procter & Gamble Company"="PG"
optdata$"NIKE, Inc."="NKE"
a= selectInput(inputId = "text", choices = optdata,label = "What stock should be shown?")
}
a
}
Zeitreihen_Stat2()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Zeitreihen_Stat2()
source('~/.active-rstudio-document')
Zeitreihen_Stat2()
library(shiny)
library("intervisu", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
plotOutput()
detach("package:intervisu", unload=TRUE)
library("intervisu", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
Group_Boxplot(iris)
Metric_Single_Variable_Analysis(iris)
Scatterplot_3d(iris)
Scatterplot_Matrix(iris)
Smoothing_Analysis(iris)
Stacked_Barplot(iris)
Stacked_Barplot(mtcars)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("intervisu", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tseries", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("dygraphs", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("xts", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data=get.hist.quote(instrument="MDVN",start=input$date1,end=as.Date("2015-01-01"),provider = "yahoo")
data=as.data.frame(data)
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2015-01-01"),provider = "yahoo")
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2014-12-31"),provider = "yahoo")
data=as.data.frame(data)
ts(data$"Open",frequency=365)
Timeseries_alt(data = data)
Timeseries(data = data)
Timeseries(data = data)
Timeseries(data = data)
ts$ts=na.approx(ts$ts)
setwd("~/LRZ Sync+Share/Bachelorarbeit/intervisu/R")
freq=list(num3=365)
length(data)
nrow(data)
nrow(data)/freq$num3
freq$num3
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2015-00-00"),provider = "yahoo",compression = "d")
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2015-00-00"),provider = "yahoo",compression = d)
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2015-01-01"),provider = "yahoo",compression = "")
data=as.data.frame(data)
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2015-01-01"),provider = "yahoo",compression = "",retclass = "ts")
data=as.data.frame(data)
data=na.approx(data)
data=get.hist.quote(instrument="MDVN",start=as.Date("2010-01-01"),end=as.Date("2015-01-01"),provider = "yahoo",compression = "",retclass = "ts")
data=na.approx(data)
data=as.data.frame(data)
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
Timeseries_alt(data = data)
date()
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
a=as.Date("2010-01-01")
a
a=="2010-01-01"
conditionalPanel(condition = "input.date1=='2010-01-01'",
column(12,renderText("text")))
fluidRow(
conditionalPanel(condition = "input.date1=='2010-01-01'",
column(12,renderText("text"))),
column(12,dygraphOutput("plot2",width = width,height = height))
)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
plot.new()
plot.window(xlim=c(0,1),ylim=c(0,2))
text("Please set the beginning and end date of your observations and the frequency!",x = 0.5,y = 1.5,cex = 2)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
text("Please set the beginning and end date of your observations and the frequency!",x = 0.5,y = 1.5,cex = 1)
plot.new()
plot.window(xlim=c(0,1),ylim=c(0,2))
text("Please set the beginning and end date of your observations and the frequency!",x = 0.5,y = 1.5,cex = 1)
plot.new()
plot.window(xlim=c(0,1),ylim=c(0,2))
text("Please set the beginning and end date of your observations and the frequency!",x = 0.5,y = 1.5,cex = 1.5)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
source('~/LRZ Sync+Share/Bachelorarbeit/Timeseries.R')
Timeseries_alt(data = data)
